// <auto-generated />
using System;
using BooksApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BooksApi.Migrations
{
    [DbContext(typeof(BooksContext))]
    partial class BooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BooksApi.Entities.Author", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            ID = new Guid("cec0ae6c-ba85-48bd-9ca2-ca8439261ee3"),
                            Firstname = "george",
                            Lastname = "rr martin"
                        });
                });

            modelBuilder.Entity("BooksApi.Entities.Book", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7380f9c6-4b77-44f5-87bd-6957fe850ade"),
                            AuthorID = new Guid("a5a2ad78-07fb-46c9-9905-4e077370eb82"),
                            Description = "winter :/",
                            Title = "winds of winter"
                        });
                });

            modelBuilder.Entity("BooksApi.Entities.Book", b =>
                {
                    b.HasOne("BooksApi.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
